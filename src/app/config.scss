@import './global';

@include foundation-xy-grid-classes(
  $base-grid: true,
  $margin-grid: true,
  $padding-grid: false,
  $block-grid: true,
  $collapse: true,
  $offset: true,
  $vertical-grid: false
);

@include foundation-typography;
@include foundation-global-styles;

@import url('https://fonts.googleapis.com/css?family=Rubik:100,300,400,500,700,900');

.site {
  background-color: $white;
  padding-bottom: 30px;

  @include breakpoint(large) {
    &::before {
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='64' viewBox='0 0 32 64'><polygon points='0,0 32,0 32,64 10,64' style='fill: #757780'></polygon></svg>");
      background-repeat: no-repeat;
      background-position: right top;
      background-size: cover;
      bottom: 0;
      content: '';
      display: block;
      position: fixed;
      right: 0;
      top: 0;
      transition: background-image 0.5s cubic-bezier(0.19, 1, 0.22, 1);
      width: 400px;
    }

    &--education {
      &::before {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='64' viewBox='0 0 32 64'><polygon points='0,0 32,0 32,64 10,64' style='fill: #6ccff6'></polygon></svg>");
      }
    }

    &--work-experience {
      &::before {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='64' viewBox='0 0 32 64'><polygon points='0,0 32,0 32,64 10,64' style='fill: #9bc53d'></polygon></svg>");
      }
    }

    &--skills {
      &::before {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='64' viewBox='0 0 32 64'><polygon points='0,0 32,0 32,64 10,64' style='fill: #c3423f'></polygon></svg>");
      }
    }
  }
}

h1 {
  margin-bottom: rem-calc(25);
  margin-top: 0;
}

h2 {
  margin-bottom: rem-calc(25);
  margin-top: 0;
}

blockquote {
  border-left: 4px solid $light;
  color: $dark;
  opacity: 1;
  padding-left: 40px;
  padding-bottom: 20px;
  padding-top: 20px;

  & p {
    color: $medium;
    line-height: 1.4;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

a {
  transition: color 0.35s cubic-bezier(0.19, 1, 0.22, 1);
}

.button {
  display: inline-block;
  font-size: 24px;
  font-weight: 500;
  position: relative;
  z-index: 1;

  &::before {
    background-color: $primary;
    bottom: 4px;
    content: '';
    display: block;
    height: 8px;
    left: 0;
    opacity: 0.35;
    position: absolute;
    right: 0;
    transition: opacity 0.5s cubic-bezier(0.19, 1, 0.22, 1);
    width: 100%;
    z-index: -1;
  }

  &,
  &:hover {
    color: $dark;
  }

  &:hover {
    &::before {
      opacity: 0.75;
    }
  }
}

.tag {
  font-size: 90%;
}

.education {
  &__list {
    list-style-type: none;
    margin-left: 0;

    &-item {
      margin-bottom: 30px;
    }
  }
}

@keyframes slide-left {
  from {
    transform: translateX(30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.list-transition {
  > li {
    animation: slide-left 1s cubic-bezier(0.19, 1, 0.22, 1) forwards;
    transform: translateX(30px);
    opacity: 0;

    &:nth-child(1) {
      animation-delay: 0.2s;
    }
    &:nth-child(2) {
      animation-delay: 0.5s;
    }
    &:nth-child(3) {
      animation-delay: 0.8s;
    }
    &:nth-child(4) {
      animation-delay: 1.1s;
    }
  }
}

@keyframes slide-up {
  from {
    transform: translateY(30px);
  }
  to {
    transform: translateY(0);
  }
}

.component-transition {
  animation: slide-up 1s cubic-bezier(0.19, 1, 0.22, 1) forwards;
  transform: translateY(30px);
}
